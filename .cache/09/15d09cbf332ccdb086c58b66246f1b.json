{"id":"../node_modules/@dabh/diagnostics/logger/console.js","dependencies":[{"name":"D:\\Dev Projects\\JournalTrawler\\package.json","includedInParent":true,"mtime":1623449116788},{"name":"D:\\Dev Projects\\JournalTrawler\\node_modules\\@dabh\\diagnostics\\package.json","includedInParent":true,"mtime":1622892300643}],"generated":{"js":"/**\n * An idiot proof logger to be used as default. We've wrapped it in a try/catch\n * statement to ensure the environments without the `console` API do not crash\n * as well as an additional fix for ancient browsers like IE8 where the\n * `console.log` API doesn't have an `apply`, so we need to use the Function's\n * apply functionality to apply the arguments.\n *\n * @param {Object} meta Options of the logger.\n * @param {Array} messages The actuall message that needs to be logged.\n * @public\n */\nmodule.exports = function (meta, messages) {\n  //\n  // So yea. IE8 doesn't have an apply so we need a work around to puke the\n  // arguments in place.\n  //\n  try { Function.prototype.apply.call(console.log, console, messages); }\n  catch (e) {}\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@dabh/diagnostics/logger/console.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"../node_modules/@dabh/diagnostics/logger/console.js":"/**\n * An idiot proof logger to be used as default. We've wrapped it in a try/catch\n * statement to ensure the environments without the `console` API do not crash\n * as well as an additional fix for ancient browsers like IE8 where the\n * `console.log` API doesn't have an `apply`, so we need to use the Function's\n * apply functionality to apply the arguments.\n *\n * @param {Object} meta Options of the logger.\n * @param {Array} messages The actuall message that needs to be logged.\n * @public\n */\nmodule.exports = function (meta, messages) {\n  //\n  // So yea. IE8 doesn't have an apply so we need a work around to puke the\n  // arguments in place.\n  //\n  try { Function.prototype.apply.call(console.log, console, messages); }\n  catch (e) {}\n}\n"},"lineCount":20}},"error":null,"hash":"1c909920b3a754781fe89fcd1fae3945","cacheData":{"env":{}}}